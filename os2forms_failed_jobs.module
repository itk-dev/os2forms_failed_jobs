<?php

/**
 * @file
 * Hooks related to os2forms failed jobs module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\os2forms_failed_jobs\Helper\Helper;

/**
 * Implements hook_views_data().
 *
 * @phpstan-return array<string, mixed>
 */
function os2forms_failed_jobs_views_data(): array {
  $data['advancedqueue']['advancedqueue_bulk_form'] = [
    'title' => 'Advanced queue operations bulk form',
    'help' => 'Add a form element that lets you run operations on multiple entries.',
    'field' => [
      'id' => 'advancedqueue_bulk_form',
    ],
  ];

  $data['advancedqueue']['retry_operation'] = [
    'title' => t('Retry operation'),
    'help' => t('Provides available operations'),
    'field' => [
      'id' => 'advancedqueue_job_retry_operation',
    ],
  ];

  $data['advancedqueue']['webform_id'] = [
    'title' => t('Webform id'),
    'help' => t('Provides a related webform id if one exists in the advanced queue payload'),
    'field' => [
      'id' => 'advancedqueue_job_webform_id',
    ],
  ];

  $data['advancedqueue']['webform_submission_id'] = [
    'title' => t('Webform submission id'),
    'help' => t('Provides a related webform submission id if one exists in the advanced queue payload'),
    'field' => [
      'id' => 'advancedqueue_job_webform_submission_id',
    ],
  ];

  $data['advancedqueue']['webform_submission_serial_id'] = [
    'title' => t('Webform submission serial id'),
    'help' => t('Provides a related webform submission serial id if a webform submission id exists in the advanced queue payload'),
    'field' => [
      'id' => 'advancedqueue_job_webform_submission_serial_id',
    ],
    'filter' => [
      'title' => t('Submission serial id'),
      'field' => 'id',
      'id' => 'advancedqueue_job_submission_serial',
      'allow empty' => TRUE,
    ],
  ];

  $data['advancedqueue']['webform_submission_serial_exists'] = [
    'title' => t('Webform submission serial exists filter'),
    'help' => t('Provides a filter for checking if webform submission exists from job'),
    'filter' => [
      'title' => t('Submission serial exists'),
      'field' => 'id',
      'id' => 'advancedqueue_job_submission_exists',
      'allow empty' => TRUE,
    ],
  ];

  return $data;
}

/**
 * Implements hook_ENTITY_TYPE_delete()
 */
function os2forms_failed_jobs_webform_submission_delete(EntityInterface $entity): void {
  $relations = Drupal::service(Helper::class)->getDetachedQueueSubmissionRelations($entity->id());
  Drupal::service(Helper::class)->removeRelations($relations);
}
