<?php

/**
 * @file
 * Code related to installing and updating this module.
 */

use Drupal\os2forms_failed_jobs\Helper\Helper;
use Drupal\views\Entity\View;
use Symfony\Component\Yaml\Yaml;
use Drupal\system\Entity\Action;

/**
 * Implements hook_schema().
 *
 * @phpstan-return array<string, mixed>
 */
function os2forms_failed_jobs_schema(): array {
  $schema['os2forms_failed_jobs_queue_submission_relation'] = [
    'description' => 'A table to relate advanced queue job ids to webform submission ids',
    'fields' => [
      'job_id' => [
        'description' => 'Job id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'submission_id' => [
        'description' => 'Submission id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'webform_id' => [
        'description' => 'The webform id',
        'type' => 'varchar_ascii',
        'length' => '128',
      ],
    ],
    'primary key' => [
      'job_id',
    ],
    'indexes' => [
      'job_id' => [
        'job_id',
      ],
      'submission_id' => [
        'submission_id',
      ],
    ],
  ];

  return $schema;
}

/**
 * Add existing queue elements to new table.
 */
function os2forms_failed_jobs_install(): void {
  Drupal::service(Helper::class)->handleImport();
}

/**
 * Add os2forms_failed_jobs_queue_submission_relation table.
 */
function os2forms_failed_jobs_update_9001(): void {
  $database = \Drupal::database();
  $schema = $database->schema();

  $table_name = 'os2forms_failed_jobs_queue_submission_relation';
  $table_schema = [
    'description' => 'A table to relate advanced queue job ids to webform submission ids',
    'fields' => [
      'job_id' => [
        'description' => 'Job id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'submission_id' => [
        'description' => 'Submission id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'webform_id' => [
        'description' => 'The webform id',
        'type' => 'varchar_ascii',
        'length' => '128',
      ],
    ],
    'indexes' => [
      'job_id' => [
        'job_id',
      ],
      'submission_id' => [
        'submission_id',
      ],
    ],
  ];

  $schema->createTable($table_name, $table_schema);
}

/**
 * Add existing queue elements to new table.
 */
function os2forms_failed_jobs_update_9002(): void {
  Drupal::service(Helper::class)->handleImport();
}

/**
 * Make job_id primary key in relation table.
 */
function os2forms_failed_jobs_update_9003(): void {
  $schema = \Drupal::database()->schema();
  $schema->addPrimaryKey('os2forms_failed_jobs_queue_submission_relation', ['job_id']);
}

/**
 * Add personalized view to database.
 */
function os2forms_failed_jobs_update_10001(): void {
  $yamlFilePath = \Drupal::service('extension.list.module')->getPath('os2forms_failed_jobs') . '/config/install/views.view.os2forms_failed_jobs_personalized.yml';
  if (!file_exists($yamlFilePath)) {
    throw new Exception('YAML file not found at ' . $yamlFilePath);
  }

  $viewConfig = Yaml::parseFile($yamlFilePath);

  if (empty($viewConfig)) {
    throw new Exception('Failed to read or parse view YAML file: ' . $yamlFilePath);
  }

  if (!isset($viewConfig['id'])) {
    throw new Exception('Invalid YAML file: "id" is missing.');
  }

  // Check if the view already exists to avoid duplication.
  if (View::load($viewConfig['id'])) {
    throw new Exception('View with ID "' . $viewConfig['id'] . '" already exists.');
  }

  // Create a new View entity from the YAML configuration.
  $view = View::create($viewConfig);

  // Save the View entity.
  $view->save();

  \Drupal::messenger()->addStatus(t('View "@label" has been created successfully.', ['@label' => $viewConfig['label']]));
}

/**
 * Add Handle job manually action to database.
 */
function os2forms_failed_jobs_update_10004(): void {
  $yamlFilePath = \Drupal::service('extension.list.module')->getPath('os2forms_failed_jobs') . '/config/install/system.action.advancedqueue_queue_handle_manually_action.yml';
  if (!file_exists($yamlFilePath)) {
    throw new Exception('YAML file not found at ' . $yamlFilePath);
  }

  $actionConfig = Yaml::parseFile($yamlFilePath);

  // Check if the action already exists to avoid duplication.
  if (Action::load($actionConfig['id'])) {
    throw new Exception('Action with ID "' . $actionConfig['id'] . '" already exists.');
  }

  $action = Action::create($actionConfig);
  $action->save();

  \Drupal::messenger()->addStatus(t('Action "@label" has been created successfully.', ['@label' => $actionConfig['label']]));
}
